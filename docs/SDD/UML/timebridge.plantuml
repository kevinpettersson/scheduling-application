@startuml timebridge
!include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/sketchy-outline/puml-theme-sketchy-outline.puml

skinparam backgroundColor ivory
skinparam linetype ortho

frame "Spring Boot REST API" {
    package "model" {
        class Calendar {
            + id : String
            + name : String
            + events : List<Event>
            + format : Format

            + Calendar(name: String, events: List<Event>)
            + Calendar()

            + filterEvents(codes: List<String>, activities : List<String>): void
            + saveEvent(event: Event): void
            + deleteEvent(event: Event): void

        }

        class Event {
            + id: String
            + course: Course
            + activity: String
            + interval: Interval
            + locations: List<Location>
            + attendees: List<Attendee>
            + visibility: Boolean
            
            + Event(course: Course, activity: String, interval: Interval, locations: List<Location>)
            + Event()
        }

        class Course {
            # name: String
            # code: String

            ~ Course(String name, String code)
            ~ Course()
        }

        class Interval {
            # start: ZonedDateTime
            # end: ZonedDateTime
            
            ~ Interval(start: ZonedDateTime, end: ZonedDateTime)
            ~ Interval()
        }

        class Location {
            + building: String
            + room: String

            + Location(building: String, room: String)
            + Location()
        }

        class Format {
            + summary: List<String>
            + description: List<String>
            + location: List<String>

            + EventFormat(summary: List<String>, description: List<String>, location: List<String))
            + EventFormat()
        }
    }

    package "service" {
        abstract class CalendarParser {
            + parse(iCal: String): Calendar
        }

        abstract class CalendarSerializer {
            + serialize(calendar: Calendar): String
        }
    }

    package repository <<MongoRepository<Calendar, String>>> {
        class CalendarRepository {
            Updates, Deletes, Inserts, Queries to and from MongoDB. 
        }
    }

    class Controller {
        + /upload(url: String): Calendar
        + /download(Calendar calendar): byte[]
        + /modify(courseFilter: List<String>, activityFilter: List<String>, calendar: Calendar): Calendar
        + /saveEvent(calendarId: String, event: Event): Calendar
        + /deleteEvent(calendarId: String, eventId: String): Calendar
        + /public/{id}(calendarId: String): byte[]

    }

    Calendar *-- Event
    Calendar *-- Format

    Event *-- Course
    Event *-- Interval
    Event *-- Location


    Controller *-l- CalendarRepository
    Controller ..> CalendarParser : <<uses>>
    Controller ..> CalendarSerializer : <<uses>>
    Controller ...> Calendar: <<uses>>
}

@enduml